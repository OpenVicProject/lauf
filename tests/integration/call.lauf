module @call;

function @produce_value(0 => 1) {
    uint 11;
    return;
}
function @produce_values(0 => 3) {
    uint 11;
    uint 42;
    uint 66;
    return;
}

function @identity(1 => 1) {
    return;
}
function @replace_value(1 => 1) {
    pop 0;
    uint 11;
    return;
}

function @consume_value(1 => 0) {
    pop 0;
    return;
}

function @consume_and_produce_values(1 => 2) {
    uint 42;
    return;
}

function @main() {
    [
        call @produce_value;
        uint 11; $lauf.test.assert_eq;
    ]
    [
        call @produce_values;
        uint 66; $lauf.test.assert_eq;
        uint 42; $lauf.test.assert_eq;
        uint 11; $lauf.test.assert_eq;
    ]

    [
        uint 11;
        call @identity;
        uint 11; $lauf.test.assert_eq;
    ]
    [
        uint 42;
        call @replace_value;
        uint 11; $lauf.test.assert_eq;
    ]

    [
        uint 11;
        uint 42;
        call @consume_value;
        uint 11; $lauf.test.assert_eq;
    ]

    [
        uint 11;
        call @consume_and_produce_values;
        uint 42; $lauf.test.assert_eq;
        uint 11; $lauf.test.assert_eq;
    ]

    return;
}


